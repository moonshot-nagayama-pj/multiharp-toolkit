# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-rust-lib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup component add clippy
          rustup component add rustfmt
      - run: sudo apt update && sudo apt install -y llvm-dev libclang-dev clang
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Restore cached mhlib
        id: cache-mhlib
        uses: actions/cache/restore@v3
        with:
          path: |
            MHLib_v3.1.0.0_64bit
          key: ${{ runner.os }}-mhlib
      - name: install mhlib
        if: steps.cache-mhlib.outputs.cache-hit != 'true'
        run: ./install_mhlib.sh
      - name: Save mhlib
        uses: actions/cache/save@v3
        if: steps.cache-mhlib.outputs.cache-hit != 'true'
        with:
          path: |
            MHLib_v3.1.0.0_64bit
          key: ${{ runner.os }}-mhlib
      - run: cargo fmt --all -- --check
      - run: cargo clippy -- -D warnings
      - run: cargo test
  build-on-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: sudo apt update && sudo apt install -y llvm-dev libclang-dev clang
      - name: Restore cached mhlib
        id: cache-mhlib
        uses: actions/cache/restore@v3
        with:
          path: |
            MHLib_v3.1.0.0_64bit
          key: ${{ runner.os }}-mhlib
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: install mhlib
        if: steps.cache-mhlib.outputs.cache-hit != 'true'
        run: ./install_mhlib.sh
      - name: Save mhlib
        uses: actions/cache/save@v3
        if: steps.cache-mhlib.outputs.cache-hit != 'true'
        with:
          path: |
            MHLib_v3.1.0.0_64bit
          key: ${{ runner.os }}-mhlib
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: 'off' 
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  build-on-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: x64
      - name: Restore cached mhlib
        id: cache-mhlib
        uses: actions/cache/restore@v3
        with:
          path: |
            MultiHarp150_160_V3_1.zip 
          key: ${{ runner.os }}-mhlib-zip
      - name: download MHLib
        if: steps.cache-mhlib.outputs.cache-hit != 'true'
        run: |
          curl -O https://www.picoquant.com/dl_software/MultiHarp150/MultiHarp150_160_V3_1.zip
      - name: Save mhlib
        uses: actions/cache/save@v3
        if: steps.cache-mhlib.outputs.cache-hit != 'true'
        with:
          path: |
            MultiHarp150_160_V3_1.zip 
          key: ${{ runner.os }}-mhlib-zip
      - name: install MHLib
        run: |
          # Unzipping MHLib
          Expand-Archive -Path MultiHarp150_160_V3_1.zip 

          # install MHLib silently. see the detail here: https://jrsoftware.org/ishelp/index.php?topic=setupcmdline
          cd '.\MultiHarp150_160_V3_1\MHLib v3.1.0.0\Windows\installation' 
          ./setup.exe /VERYSILENT /NORESTART /LOG
          echo "-TEMP------"
          ls $Env:TEMP
          echo "-------"
          ls "C:\Program Files\"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x64
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build-on-linux, build-on-windows, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
